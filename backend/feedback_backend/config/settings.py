"""
Django settings for feedback_backend project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import environ
import os
from pathlib import Path

CONFIG_DIR = os.path.dirname(os.path.abspath(__file__))
env = environ.Env()
env.read_env(os.path.join(CONFIG_DIR, '.env'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4+ody8mvx34)(dr@%1x9kxde$4htno39g^v@f_ur8j21jom$+q'

# SECURITY WARNING: don't run with debug turned on in production!
if env('ENV') == 'dev':
    DEBUG = True
else:
    DEBUG = False

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '[::1]',
]

AUTH_USER_MODEL = 'users.User'

# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'users.apps.UsersConfig',
    'posts.apps.PostsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'firebase_admin',
    'storages',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'users.firebase_authenticaion.FirebaseAuthentication',
    ),
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_WHITELIST = [
    "http://localhost:3000",
    "http://localhost:80",
    "http://0.0.0.0:8000",
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'feedback_backend/db.sqlite3'),
        'ENGINE': env('DB_ENGINE'),
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'config/static')
STATIC_URL = 'static/'
DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
# STATICFILES_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = env('GS_BUCKET_NAME')
GS_PROJECT_ID = env('GCP_PROJECT_ID')
# STATIC_URL = 'https://storage.googleapis.com/feedback_site/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Google Storage Settings
from google.oauth2 import service_account
# service_account_key = {
#     'type': 'service_account',
#     'project_id': env('GCP_PROJECT_ID'),
#     'private_key_id': env('GCP_PRIVATE_KEY_ID'),
#     'private_key': env('GCP_PRIVATE_KEY'),
#     'client_email': env('GCP_CLIENT_EMAIL'),
#     'client_id': env('GCP_CLIENT_ID'),
#     'auth_uri': 'https://accounts.google.com/o/oauth2/auth',
#     'token_uri': 'https://oauth2.googleapis.com/token',
#     'auth_provider_x509_cert_url': 'https://www.googleapis.com/oauth2/v1/certs',
#     'client_x509_cert_url': env('GCP_CLIENT_CERT_URL')
# }
service_account_key = {
    "type": "service_account",
    "project_id": "mydev-306208",
    "private_key_id": "e9ebbb7ca92d48af0285403a421d56cd47e44b65",
    "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCxLnyjfIpYmcae\nTDsUYxOS14xS92hVZWKsHd2gMnxOShrKIaaHYn11TF0rAqjH0H9eAjtTqkRHMGz4\nHbFQzmQDoyFSzca2LWOBqFBAdmmtO3mB1JDxKT2wWcCJ7qE4zDdAf9/sb0ykJWOY\n807uu1tDuayXWjNNT65fvjN7UWdxURJFGI9s1v9B5EOtL+/JJWRDIadkYJ0jOLOv\nw6DU37OltoE99tDEdCaS6SZ4a1kVVvIGnooR+0fJXOUlp94Z2ZsvyaUVUW1IoTdL\nkUomgRHZ8F5mkkT6uvWM9CtY02vhLr+cp1nYL7tiApsDhuhR5ncKTrpAGuyuw6WZ\nUBFWwBjHAgMBAAECggEARbhZsklU9SVZqzuq+cw8zQkFfjY9t3DEQZ8k8R88m9/8\nJ7LTIS4H2SrZ9I1A1hO8ssTlDHiREoRDNOUWO4pjf6zm9XrkqRY2NDSDk8IktlaT\naxu2hzcnv6eppH0issNlMHvBJPvs6CCQTwTa+AUAlidPe2Uyj8b9gk5JWsq/Di7l\nY5wUT2IM0p57lwqDZTsnFeCqgMpnrgClpq6Gu2Xi6NyZTfV8oz8+9oILAqv5ovx4\nTlGMHjh+TaIfiLG5ft7c1x4pmz9eTv/UZLzKD0D2QsEBDT11x7rxeU/Am/nX7OjW\nw8j5E2z2oV4XCJ22bLNmlIlftT6kO2hQEk8YYfhjYQKBgQDeGKt7VVJ5i1bIf9+Q\nhJa7Y1ANODOzg43NaIb4B4obHgFFiwf40qzn9NTgIyIEM5w59EbRrvUXME3a7Efc\nt+HaSmrkQxqQGbj6ahLnTyCYfnQUd1k8cTZAWPDduuAy/ww656sulDt/PeRn7/c4\nvg0wVwxBT4TmjEVZFvJ20MDz5wKBgQDMOpZOQ49NB16ZagQVoe8pMvgPbLTJk1rf\nS+BCtuxWeVk9KaBH8oitnh0nd+B8SXgtE8TEmCCGktSRnTFEhHSMKNQRMLVyRZLq\nyN+HIPHnL76zpMadmkhgAgidaD20aow5Kr2XVzY7wCqu/zQmQm9ZLMFpCSRIHk8I\nOImfYIUYIQKBgGcVKDJcTaVgSO1SfJ+FCrj6xWL9XPHK83wNMefZB/7CFHEEsLSK\ng/o9JrjJVbaBhddYS65y+ArFPr2HwWruZgN9WtOLWb7cUYDYzuFRVp2ww4vkQSTO\nnxGKtnETlY/V1QVaFZfO8TaDsYmUVTie7VwsauG9WL/xBxbskakYBxatAoGBAIzV\n0hUCje2mqVvOOibY1t5oYZvxcPKZBU97OZmIH466fAmrjPZQkGR55szy5AGRgKhF\nO6n+5l8nHiOUbQc8+Eo3VZbNKjM1O01hXJQI6ghtamrjtHu2izZ58Irr+bFS0IQT\nr06QO7wUltq67rF7muG59V6DiVuaWxHmOzGHFAFBAoGBAJR0t1nlB4EqQ2xapANh\ngwIz99O7s4vOliJbk0r4r5VjSzWowPftIWHlrvujsMAM/zNiQ3a8GzWJ4nkrOXVY\ntRgdi9jAUg6xg5IvWpyLuPsvzOizt04cQ0Kn6/470OC9CTV2LQU492YxEbp1QkUm\nvu70SOtUKOWf7Yb9G+7wCBGq\n-----END PRIVATE KEY-----\n",
    "client_email": "firebase-adminsdk-83iqu@mydev-306208.iam.gserviceaccount.com",
    "client_id": "102003744653199958467",
    "auth_uri": "https://accounts.google.com/o/oauth2/auth",
    "token_uri": "https://oauth2.googleapis.com/token",
    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
    "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-83iqu%40mydev-306208.iam.gserviceaccount.com"
  }
GS_CREDENTIALS = service_account.Credentials.from_service_account_info(service_account_key)
# GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
#     os.path.join(BASE_DIR, 'feedback_backend/feedback_site_serviceaccount.json')
# )

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'develop': {
            'format': '%(asctime)s [%(levelname)s] %(pathname)s:%(lineno)d '
                      '%(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'develop',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        # 発行されるSQL文を出力するための設定
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}
